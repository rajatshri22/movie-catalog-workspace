name: Frontend Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0'  # This runs at 00:00 every Sunday

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    # Check out the code from the repository.
      - name: Checkout code
        uses: actions/checkout@v2

      # Perform a cache action to restore cache before dependency install
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('/backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      
      # Set up a Node.js environment using the specified node version.
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: '14' 
    
    #Install dependencies
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend/  

      # Run the linter.
      - name: Run lint
        run: npx eslint
        working-directory: ./frontend/


      # Test Job Setup.
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      # Check out the code from the repository.
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up a Node.js environment using the specified node version.
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 14

      #Install dependencies
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend/

      # Run the tests.
      - name: Run tests
        run: npm run test
        working-directory: ./frontend/

#Build Job
  build:
  #job should only run after the first 2 succeed
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      #  Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # Setup NodeJS
      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 14

      # Install dependencies
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend/ 

      # Run the npm run build command
      - name: Build application
        run: npm run build
        working-directory: ./frontend/  # Specify the working directory

      - name: Serve application
        run: |
          npx http-server ./frontend/ -p 8080 &  # Serve the index.html file
          sleep 5  # Wait for the server to start

          
